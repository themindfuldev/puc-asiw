//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.235.
// 
#pragma warning disable 1591

namespace WcfCepService.ByJgCep {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CEPServiceBinding", Namespace="urn:CEPService")]
    public partial class CEPService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback obterVersaoOperationCompleted;
        
        private System.Threading.SendOrPostCallback obterLogradouroOperationCompleted;
        
        private System.Threading.SendOrPostCallback obterLogradouroAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback obterCEPOperationCompleted;
        
        private System.Threading.SendOrPostCallback obterCEPAuthOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CEPService() {
            this.Url = global::WcfCepService.Properties.Settings.Default.WcfCepService_ByJgCep_CEPService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event obterVersaoCompletedEventHandler obterVersaoCompleted;
        
        /// <remarks/>
        public event obterLogradouroCompletedEventHandler obterLogradouroCompleted;
        
        /// <remarks/>
        public event obterLogradouroAuthCompletedEventHandler obterLogradouroAuthCompleted;
        
        /// <remarks/>
        public event obterCEPCompletedEventHandler obterCEPCompleted;
        
        /// <remarks/>
        public event obterCEPAuthCompletedEventHandler obterCEPAuthCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:CEPServiceAction", RequestNamespace="urn:http://www.byjg.com.br", ResponseNamespace="urn:http://www.byjg.com.br")]
        [return: System.Xml.Serialization.SoapElementAttribute("obterVersaoResponse")]
        public string obterVersao() {
            object[] results = this.Invoke("obterVersao", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void obterVersaoAsync() {
            this.obterVersaoAsync(null);
        }
        
        /// <remarks/>
        public void obterVersaoAsync(object userState) {
            if ((this.obterVersaoOperationCompleted == null)) {
                this.obterVersaoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobterVersaoOperationCompleted);
            }
            this.InvokeAsync("obterVersao", new object[0], this.obterVersaoOperationCompleted, userState);
        }
        
        private void OnobterVersaoOperationCompleted(object arg) {
            if ((this.obterVersaoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obterVersaoCompleted(this, new obterVersaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:CEPServiceAction", RequestNamespace="urn:http://www.byjg.com.br", ResponseNamespace="urn:http://www.byjg.com.br")]
        [return: System.Xml.Serialization.SoapElementAttribute("obterLogradouroResponse")]
        public string obterLogradouro(string cep) {
            object[] results = this.Invoke("obterLogradouro", new object[] {
                        cep});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void obterLogradouroAsync(string cep) {
            this.obterLogradouroAsync(cep, null);
        }
        
        /// <remarks/>
        public void obterLogradouroAsync(string cep, object userState) {
            if ((this.obterLogradouroOperationCompleted == null)) {
                this.obterLogradouroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobterLogradouroOperationCompleted);
            }
            this.InvokeAsync("obterLogradouro", new object[] {
                        cep}, this.obterLogradouroOperationCompleted, userState);
        }
        
        private void OnobterLogradouroOperationCompleted(object arg) {
            if ((this.obterLogradouroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obterLogradouroCompleted(this, new obterLogradouroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:CEPServiceAction", RequestNamespace="urn:http://www.byjg.com.br", ResponseNamespace="urn:http://www.byjg.com.br")]
        [return: System.Xml.Serialization.SoapElementAttribute("obterLogradouroAuthResponse")]
        public string obterLogradouroAuth(string cep, string usuario, string senha) {
            object[] results = this.Invoke("obterLogradouroAuth", new object[] {
                        cep,
                        usuario,
                        senha});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void obterLogradouroAuthAsync(string cep, string usuario, string senha) {
            this.obterLogradouroAuthAsync(cep, usuario, senha, null);
        }
        
        /// <remarks/>
        public void obterLogradouroAuthAsync(string cep, string usuario, string senha, object userState) {
            if ((this.obterLogradouroAuthOperationCompleted == null)) {
                this.obterLogradouroAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobterLogradouroAuthOperationCompleted);
            }
            this.InvokeAsync("obterLogradouroAuth", new object[] {
                        cep,
                        usuario,
                        senha}, this.obterLogradouroAuthOperationCompleted, userState);
        }
        
        private void OnobterLogradouroAuthOperationCompleted(object arg) {
            if ((this.obterLogradouroAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obterLogradouroAuthCompleted(this, new obterLogradouroAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:CEPServiceAction", RequestNamespace="urn:http://www.byjg.com.br", ResponseNamespace="urn:http://www.byjg.com.br")]
        [return: System.Xml.Serialization.SoapElementAttribute("obterCEPResponse")]
        public string[] obterCEP(string logradouro, string localidade, string UF) {
            object[] results = this.Invoke("obterCEP", new object[] {
                        logradouro,
                        localidade,
                        UF});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void obterCEPAsync(string logradouro, string localidade, string UF) {
            this.obterCEPAsync(logradouro, localidade, UF, null);
        }
        
        /// <remarks/>
        public void obterCEPAsync(string logradouro, string localidade, string UF, object userState) {
            if ((this.obterCEPOperationCompleted == null)) {
                this.obterCEPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobterCEPOperationCompleted);
            }
            this.InvokeAsync("obterCEP", new object[] {
                        logradouro,
                        localidade,
                        UF}, this.obterCEPOperationCompleted, userState);
        }
        
        private void OnobterCEPOperationCompleted(object arg) {
            if ((this.obterCEPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obterCEPCompleted(this, new obterCEPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:CEPServiceAction", RequestNamespace="urn:http://www.byjg.com.br", ResponseNamespace="urn:http://www.byjg.com.br")]
        [return: System.Xml.Serialization.SoapElementAttribute("obterCEPAuthResponse")]
        public string[] obterCEPAuth(string logradouro, string localidade, string UF, string usuario, string senha) {
            object[] results = this.Invoke("obterCEPAuth", new object[] {
                        logradouro,
                        localidade,
                        UF,
                        usuario,
                        senha});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void obterCEPAuthAsync(string logradouro, string localidade, string UF, string usuario, string senha) {
            this.obterCEPAuthAsync(logradouro, localidade, UF, usuario, senha, null);
        }
        
        /// <remarks/>
        public void obterCEPAuthAsync(string logradouro, string localidade, string UF, string usuario, string senha, object userState) {
            if ((this.obterCEPAuthOperationCompleted == null)) {
                this.obterCEPAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobterCEPAuthOperationCompleted);
            }
            this.InvokeAsync("obterCEPAuth", new object[] {
                        logradouro,
                        localidade,
                        UF,
                        usuario,
                        senha}, this.obterCEPAuthOperationCompleted, userState);
        }
        
        private void OnobterCEPAuthOperationCompleted(object arg) {
            if ((this.obterCEPAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obterCEPAuthCompleted(this, new obterCEPAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void obterVersaoCompletedEventHandler(object sender, obterVersaoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obterVersaoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obterVersaoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void obterLogradouroCompletedEventHandler(object sender, obterLogradouroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obterLogradouroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obterLogradouroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void obterLogradouroAuthCompletedEventHandler(object sender, obterLogradouroAuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obterLogradouroAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obterLogradouroAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void obterCEPCompletedEventHandler(object sender, obterCEPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obterCEPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obterCEPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void obterCEPAuthCompletedEventHandler(object sender, obterCEPAuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obterCEPAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obterCEPAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591